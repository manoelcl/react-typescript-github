/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    both: THREE.Mesh
    left: THREE.Mesh
    up: THREE.Mesh
    all: THREE.Mesh
    none: THREE.Mesh
    upRight: THREE.Mesh
    right: THREE.Mesh
  }
  materials: {}
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/street.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.both.geometry} material={nodes.both.material} />
      <mesh geometry={nodes.left.geometry} material={nodes.left.material} />
      <mesh geometry={nodes.up.geometry} material={nodes.up.material} />
      <mesh geometry={nodes.all.geometry} material={nodes.all.material} rotation={[-Math.PI, 0.01, -Math.PI]} />
      <mesh geometry={nodes.none.geometry} material={nodes.none.material} />
      <mesh geometry={nodes.upRight.geometry} material={nodes.upRight.material} rotation={[-Math.PI, 0.01, -Math.PI]} />
      <mesh geometry={nodes.right.geometry} material={nodes.right.material} rotation={[-Math.PI, 0.01, -Math.PI]} />
    </group>
  )
}

useGLTF.preload('/street.glb')
